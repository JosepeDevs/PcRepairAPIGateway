# MICROSERVICE DATA: Persistence, apigateway routing
spring:
  application:
    name: AuthApiGateway
  banner:
    location: JPD.txt
  datasource:
    url: ${DB_URL} # this is from AWS RDS
    username: ${DB_USER}  # this is from AWS RDS
    password: ${DB_PSSWRD} # this is from AWS RDS
    driver-class-name: org.postgresql.Driver
  jpa:
    properties:
      generate-ddl: true
      hibernate:
        "[format_sql]": true
        "[show_sql]": true
        "[default_schema]": pctaller
#APIGATEWAY ROUTING
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
          lowerCaseServiceId: true
          lower-case-service-id: true
      routes:
        - id: AUTHMANAGER
          uri: lb://AUTHMANAGER
          predicates:
            - Path=/AUTHMANAGER/**
        - id: PERSONMANAGER
          uri: lb://PERSONMANAGER
          predicates:
            - Path=/PERSONMANAGER/**
#CONFIGURATION TO ALLOW SPRING WEB AND APIGATEWAY TO BE BOTH PRESENT            
  main:
    web-application-type: reactive
    allow-bean-definition-overriding: true

# SERVER CONFIGURATION
server:
  port: 7777 
logging:
  level:
   "[org.springframework.web]": INFO
   "[org.springframework.security]": INFO

# CUSTOM JWT settings 
myconfig:
  security:
    jwt:
      SECRET_KEY: ${SECRET_KEY}
      # In prod I would not make this, but since this is a personal project and in case I lose access to this terminal
      expirationMinutes: 15 #minutes
      #refresh-token:
      #  expiration: 60 # minutes
      
#DISCOVERY CLIENT      
eureka:
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
     defaultZone: http://${EUREKA_INSTANCE_HOSTNAME}:${EUREKA_PORT}/eureka
     


     
     
     